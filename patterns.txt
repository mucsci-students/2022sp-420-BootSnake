Design Patterns

1. MVC: We used a model-view-controller pattern pattern to distribute and specialize the responsibilities of different
   files in our project.

2. Iterator: Our ClassSearch method iterates through a list of AClass objects to find the class of the given name.
   (Location: classModel.py)

3. Facade: The AClass object is a facade that contains subsystems of methods, fields, and relationships.
   (Location: classModel.py)

4. Command: Our GUI uses buttons that are linked to commands.
   (Location: interfaceGUIView.py)

5. Observer: When a class is renamed, all relationships dependent on the given class are made to set its old name to match 
   the new name.
   (Location: classModel.py)